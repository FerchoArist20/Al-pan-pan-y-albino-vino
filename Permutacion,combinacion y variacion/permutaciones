# -*- coding: utf-8 -*-
"""permutaciones_logica

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1-w0xh6mXfkK6d5VxnFwfJHqfxR8-AO3Y
"""

#PERMUTACION ORDINARIA
def permute(nums):
    if len(nums) == 0:
        return []
    if len(nums) == 1:
        return [nums]
    permutations = []
    for i in range(len(nums)):
        current_num = nums[i]
        remaining_nums = nums[:i] + nums[i+1:]
        for permutation in permute(remaining_nums):
            permutations.append([current_num] + permutation)
    return permutations
    
permutations = permute([1, 2, 3])
for p in permutations:
    print(p)

print(len(permutations))

#PERMUTACION CON REPETICION

def permutation_with_repetition(n, lst):
    if n == 0:
        return [[]]
    result = []
    for item in lst:
        for permutation in permutation_with_repetition(n-1, lst):
            result.append([item] + permutation)
    return result
n = 3
lst = [1,2,3]
permutations = permutation_with_repetition(n, lst)
for p in permutations:
  print(p)
print("El numero de combinaciones posibles en este caso son", len(permutations))
